@using Videa.Web.Framework.Helpers
@model Videa.Boilerplate.WebApp.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
    HtmlHelper.ClientValidationEnabled = false;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    Layout = "~/Views/Account/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/styles/login-page.min.css")

<div ng-app="videaApp" ng-controller="LoginController" ng-init='init(@Html.Json(Model))'>
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl, Area = "" }, FormMethod.Post, new { @class = "login-form", name = "loginForm", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    <div class="input-group">
                        <span class="input-group-addon username"></span>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-lg login-input", required = "", ng_model = "user.email" })
                    </div>
                </div>
            </div>
            <div class="col-md-7">
                @Html.LabelFor(m => m.Password)
                <div class="row">
                    <div class="col-md-9">
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon password"></span>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg login-input", required = "", ng_model = "user.password" })
                            </div>
                            <div class="login-actions">
                                @Html.ActionLink("FORGOT PASSWORD?", "ForgotPassword")
                                <div class="checkbox vui-checkbox pull-right">
                                    @Html.CheckBoxFor(m => m.RememberMe, new { data_toggle = "checkbox" })
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 btn-submit-row">
                        <input type="submit" class="btn btn-primary btn-submit" value="SIGN IN" ng-click="submit()" />
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="validation-summary-errors login" ng-cloak ng-if="!loginForm.$valid && submitted">
        <i class="glyphicon glyphicon-warning-sign"></i>
        <ul>
            <li ng-bind="errorMessage"></li>
        </ul>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="validation-summary-errors login" ng-if="!submitted">
            <i class="glyphicon glyphicon-warning-sign"></i>
            <ul>
                @foreach (var modelError in ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                {
                    <li>@modelError.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    <div class="splash">
        <h1 class="splash-title">
            Reach, sure and simple.
        </h1>
    </div>
</div>
